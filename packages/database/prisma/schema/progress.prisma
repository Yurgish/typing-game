model UserLessonProgress {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  userId   String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  lessonId String @db.ObjectId
  lesson   Lesson @relation(fields: [lessonId], references: [id])

  currentScreenOrder Int
  isCompleted        Boolean   @default(false)
  completedAt        DateTime?

  rawWPM            Float?
  adjustedWPM       Float?
  accuracy          Float?
  backspaces        Int?
  errors            Int?
  timeTaken         Int?
  typedCharacters   Int?
  correctCharacters Int?

  screenMetrics ScreenMetrics[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, lessonId])
  @@map("userLessonProgress")
}

model ScreenMetrics {
  id                   String             @id @default(auto()) @map("_id") @db.ObjectId
  userLessonProgressId String             @db.ObjectId
  userLessonProgress   UserLessonProgress @relation(fields: [userLessonProgressId], references: [id], onDelete: Cascade)

  screenOrder Int
  screenType  LearningMode

  rawWPM            Float
  adjustedWPM       Float
  accuracy          Float
  backspaces        Int
  errors            Int
  timeTaken         Int
  typedCharacters   Int
  correctCharacters Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userLessonProgressId, screenOrder])
  @@map("screenMetrics")
}

model UserStats {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  totalExperience Int  @default(0)
  currentLevel    Int  @default(1)
  xpToNextLevel   Int?

  totalLessonsCompleted  Int   @default(0)
  totalPerfectLessons    Int   @default(0)
  highestOverallWPM      Float @default(0)
  highestOverallAccuracy Float @default(0)

  beginnerLessonsCompleted Int   @default(0)
  beginnerPerfectLessons   Int   @default(0)
  highestBeginnerWPM       Float @default(0)
  highestBeginnerAccuracy  Float @default(0)

  mediumLessonsCompleted Int   @default(0)
  mediumPerfectLessons   Int   @default(0)
  highestMediumWPM       Float @default(0)
  highestMediumAccuracy  Float @default(0)

  advancedLessonsCompleted Int   @default(0)
  advancedPerfectLessons   Int   @default(0)
  highestAdvancedWPM       Float @default(0)
  highestAdvancedAccuracy  Float @default(0)

  currentStreak Int @default(0)
  longestStreak Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserAchievement {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String
  achievementId String
  unlockedAt    DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, achievementId])
}

model UserDailyActivity {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  userId           String
  date             DateTime
  lessonsCompleted Int      @default(0)
  screensCompleted Int      @default(0)
  xpEarnedToday    Int      @default(0)

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, date])
}

model CharacterMetric {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  userId       String
  character    String
  correctCount Int    @default(0)
  errorCount   Int    @default(0)

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, character])
}
